# -*- coding: utf-8 -*-
"""Youth Tobacoo 2023 dataset .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CEfkBUxVyUCce_e-Aof9AX6t7OzY83YO
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

df = pd.read_csv('GYTS4.csv')

df

df.info()

df.describe()

df



df

df.size

df.shape

df = df.apply(lambda x: pd.to_numeric(x, errors='coerce'))

df.dtypes

df.info()

# Set the plot size
plt.figure(figsize=(14, 8))

# Create the bar chart for current and ever smokers
sns.barplot(x='Current tobacco smokers (%)', y='State/UT', data=df, color='blue', label='Current smokers')
sns.barplot(x='Ever tobacco smokers (%)', y='State/UT', data=df, color='red', label='Ever smokers', alpha=0.6)

# Add labels and title
plt.xlabel('Percentage')
plt.ylabel('State/UT')
plt.title('Comparison of Current and Ever Tobacco Smokers by State/UT')
plt.legend()

# Show the plot
plt.tight_layout()
plt.show()

# Set the plot size
plt.figure(figsize=(14, 8))

# Create the bar chart for current smokers
sns.barplot(x='Current tobacco smokers (%)', y='State/UT', data=df, palette='viridis')

# Add labels and title
plt.xlabel('Percentage')
plt.ylabel('State/UT')
plt.title('Current Tobacco Smokers by State/UT')

# Show the plot
plt.tight_layout()
plt.show()

cigarette_users = df['Current cigarette users (%)'].sum()
bidi_users = df['Current bidi users (%)'].sum()
smokeless_tobacco_users = df['Current smokeless tobacco users (%)'].sum()
paan_users = df['Ever users of  paan masala together with tobacco (%)'].sum()
e_cigarette_users = df['Ever e-cigarette use (%)'].sum()

# Create a pie chart
labels = ['Cigarette Users', 'Bidi Users', 'Smokeless Tobacco Users', 'Paan Users with Tobacco', 'E-Cigarette Users']
sizes = [cigarette_users, bidi_users, smokeless_tobacco_users, paan_users, e_cigarette_users]
colors = ['#ff9999', '#66b3ff', '#99ff99', '#ffcc99', '#c2c2f0']
explode = (0, 0, 0, 0, 0)  # explode the 1st slice (Cigarette Users)

plt.figure(figsize=(10, 7))
plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',
        shadow=True, startangle=140)
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.

plt.title('Proportion of Current Cigarette, Bidi, Smokeless Tobacco, Paan Users with Tobacco, and E-Cigarette Users')
plt.show()

df_sorted = df.sort_values(by='Ever tobacco users (%)', ascending=False)
sns.barplot(x='Ever tobacco users (%)', y='State/UT', data=df_sorted, color='blue', label='Ever users')
sns.barplot(x='Current tobacco users (%)', y='State/UT', data=df_sorted, color='red', label='Current users', alpha=0.7)

# Add labels and title
plt.xlabel('Percentage')
plt.ylabel('State/UT')
plt.title('Comparison of Ever and Current Tobacco Users by State/UT')
plt.legend()

# Show the plot
plt.tight_layout()
plt.show()

plt.figure(figsize=(14, 8))
# barchart for current and susceptible smokers

Current_Tobacco_Smokers = df['Current tobacco smokers (%)'].sum()
Never_Cigarette_Smokers_Susceptible = df['Never cigarette smokers susceptible to cigarette use in future (%)'].sum()

labels = ['Current Tobacco Smokers', 'Never Cigarette Smokers Susceptible']
sizes = [Current_Tobacco_Smokers, Never_Cigarette_Smokers_Susceptible]
colors = ['#ff9999', '#66b3ff']

plt.figure(figsize=(14 ,8))
plt.bar(labels, sizes , color =colors)

plt.title('Proportion of Current Tobacco Smokers and Never Cigarette Smokers Susceptible')
plt.show()

#barchart for median initation of tobacco usage


Median_age_Cigratte = df['Median age of initiation of Cigarette (in years)'].median()
Median_age_Bidi = df['Median age of initiation of Bidi (in years)'].median()
Median_age_Smokeless_Tobacco = df['Median age of initiation of smokeless tobacco (in years)'].median()


labels = ['Median age of initiation of Cigarette', 'Median age of initiation of Bidi', 'Median age of initiation of Smokeless Tobacco']
sizes = [Median_age_Cigratte, Median_age_Bidi, Median_age_Smokeless_Tobacco]
colors = ['#ff9999', '#66b3ff', '#99ff99']

plt.figure(figsize=(14 ,8))
plt.bar(labels, sizes , color =colors)

plt.title('Median age of initiation of Cigarette, Bidi, Smokeless Tobacco')
plt.show()

# Create the box plot
plt.figure(figsize=(10, 6))
df.boxplot(column=['Median age of initiation of Cigarette (in years)',
                   'Median age of initiation of Bidi (in years)',
                   'Median age of initiation of smokeless tobacco (in years)'])

# Add labels and title
plt.xlabel('Tobacco Type')
plt.ylabel('Age of Initiation (years)')
plt.title('Age of Initiation of Different Tobacco Types')

# Rename x-axis labels
plt.xticks([1, 2, 3], ['Cigarette', 'Bidi', 'Smokeless Tobacco'])

# Show the plot
plt.show()

# Calculate the median ages
median_age_cigarette = df['Median age of initiation of Cigarette (in years)'].median()
median_age_bidi = df['Median age of initiation of Bidi (in years)'].median()
median_age_smokeless = df['Median age of initiation of smokeless tobacco (in years)'].median()

# Set target values (for demonstration purposes, these should be based on your data or objectives)
target_age = 18

# Create the bullet graph
fig, ax = plt.subplots(figsize=(10, 6))

# Data to plot
labels = ['Cigarette', 'Bidi', 'Smokeless Tobacco']
values = [median_age_cigarette, median_age_bidi, median_age_smokeless]

# Create performance bands (these should be based on your data or objectives)
performance_bands = [20, 25, 30]

# Draw the performance bands
for i, label in enumerate(labels):
    ax.barh(i, performance_bands[2], color='lightgrey', height=0.4)
    ax.barh(i, performance_bands[1], color='darkgrey', height=0.4)
    ax.barh(i, performance_bands[0], color='grey', height=0.4)

# Draw the actual performance bars
ax.barh(range(len(values)), values, color='blue', height=0.2)

# Draw the target marker
for i in range(len(values)):
    ax.plot(target_age, i, 'k|', markersize=20)

# Add labels and title
ax.set_yticks(range(len(labels)))
ax.set_yticklabels(labels)
ax.set_xlabel('Age of Initiation (years)')
ax.set_title('Bullet Graph of Median Age of Initiation of Different Tobacco Types')

# Display the plot
plt.show()

#bar chart for quitting tobacco


plt.figure(figsize=(10, 8))


# Calculate the sums for the specified columns
ever_tobacco_smokers_quit = df['Ever tobacco smokers who quit in last 12 months (%)'].sum()
current_tobacco_smokers_tried_quitting = df['Current tobacco smokers who tried to quit smoking in the past 12 months (%)'].sum()
current_tobacco_smokers_want_quitting = df['Current tobacco smokers who wanted to quit smoking now   (%)'].sum()
ever_smokeless_tobacco_users_quit = df['Ever  smokeless tobacco users who quit  in last 12 months (%)'].sum()
current_smokeless_tobacco_users_tried_quitting = df['Current smokeless tobacco users who tried to quit tobacco in the past 12 months   (%)'].sum()
current_smokeless_tobacco_users_want_quitting = df['Current  smokeless tobacco users who wanted to quit tobacco now     (%)'].sum()

# Data for the bar chart
labels = [
    'Ever Tobacco Smokers Quit',
    'Current Tobacco Smokers Tried Quitting',
    'Current Tobacco Smokers Want Quitting',
    'Ever Smokeless Tobacco Users Quit',
    'Current Smokeless Tobacco Users Tried Quitting',
    'Current Smokeless Tobacco Users Want Quitting'
]
values = [
    ever_tobacco_smokers_quit,
    current_tobacco_smokers_tried_quitting,
    current_tobacco_smokers_want_quitting,
    ever_smokeless_tobacco_users_quit,
    current_smokeless_tobacco_users_tried_quitting,
    current_smokeless_tobacco_users_want_quitting
]

# Create the bar chart
fig, ax = plt.subplots(figsize=(14, 8))
ax.bar(labels, values, color=['#ff9999', '#66b3ff', '#99ff99', '#ffcc99', '#c2c2f0', '#ffb3e6'])

# Add labels and title
ax.set_xlabel('Categories')
ax.set_ylabel('Percentage')
ax.set_title('Percentage of Users Quitting Attempts and Intentions')

# Rotate x-axis labels for better readability
plt.xticks(rotation=45, ha='right')

# Display the plot
plt.show()

#corrlation between median starting age and Exposure

columns_of_interest =['Median age of initiation of Cigarette (in years)',
                      'Median age of initiation of Bidi (in years)',
                      'Median age of initiation of smokeless tobacco (in years)',
                      'Exposure to tobacco smoke at home/public place (%)',
                      'Exposure to tobacco smoke at home   (%)',
                      'Exposure to tobacco smoke inside any enclosed public  places  (%)',
                      'Exposure to tobacco smoke at any outdoor public places  (%)']

analysis_of_data = df[columns_of_interest]

corralation_matrix = analysis_of_data.corr()

plt.figure(figsize=(12, 10))
sns.heatmap(corralation_matrix, annot=True, cmap='coolwarm', fmt ='.2f')
plt.title('Correlation between Exposure to tobacco and Median age of Initation')
plt.show()

#pie chart purchase of tobacco products

cigarette_bought_from_store = df['Major source of tobacco product- Cigarette: Store   (%)'].sum()
cigarette_bought_from_paan =df['Major source of tobacco product- Cigarette: Paan shop (%)'].sum()
bidi_bought_from_store = df['Major source of tobacco product- Bidi: Store   (%)'].sum()
bidi_bought_from_paan = df['Major source of tobacco product- Bidi: Paan shop (%)'].sum()
smokeless_bought_from_store =df['Major source of tobacco product- Smokeless tobacco: Store   (%)'].sum()
smokeless_bought_from_paan =df['Major source of tobacco product- Smokeless tobacco: Paan shop  (%)'].sum()


# Create a pie chart
labels = ['cigarette_bought_from_store', 'cigarette_bought_from_paan', 'bidi_bought_from_store', 'bidi_bought_from_paan', 'smokeless_bought_from_store','smokeless_bought_from_paan']
sizes = [cigarette_bought_from_store, cigarette_bought_from_paan, bidi_bought_from_store, bidi_bought_from_paan, smokeless_bought_from_store, smokeless_bought_from_paan]
colors = ['#ff9999', '#66b3ff', '#99ff99', '#ffcc99', '#c2c2f0','#ffcb88']
explode = (0, 0, 0, 0, 0, 0)  # explode the 1st slice (Cigarette Users)

plt.figure(figsize=(10, 7))
plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',
        shadow=True, startangle=140)
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.

plt.title('Proportion of Purchase of Cigarette, Bidi and  Smokeless Tobacco Users with Tobacco')
plt.show()

# Aggregate the data
cigarette_store = df['Current cigarette smokers who bought cigarettes from a store, paan shop, street vendor, or vending machine       (%)'].sum()
cigarette_paan_shop = df['Major source of tobacco product- Cigarette: Paan shop (%)'].sum()

bidi_store = df['Current bidi smokers who bought bidi from a store, paan shop, or street vendor (%)'].sum()
bidi_paan_shop = df['Major source of tobacco product- Bidi: Paan shop (%)'].sum()

# Create the data for the grouped bar chart
labels = ['Store', 'Paan Shop']
cigarette_sizes = [cigarette_store, cigarette_paan_shop]
bidi_sizes = [bidi_store, bidi_paan_shop]

x = range(len(labels))

# Plot the grouped bar chart
fig, ax = plt.subplots(figsize=(14, 8))
bar_width = 0.35

bar1 = ax.bar(x, cigarette_sizes, width=bar_width, color='#ff9999', label='Cigarette')
bar2 = ax.bar([p + bar_width for p in x], bidi_sizes, width=bar_width, color='#66b3ff', label='Bidi')

# Add labels and title
ax.set_xlabel('Source')
ax.set_ylabel('Percentage')
ax.set_title('Proportion of Current Tobacco Smokers by Purchase Source')
ax.set_xticks([p + bar_width / 2 for p in x])
ax.set_xticklabels(labels)
ax.legend()

# Add value labels on bars
for bar in bar1:
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width() / 2.0, yval, round(yval, 2), ha='center', va='bottom')

for bar in bar2:
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width() / 2.0, yval, round(yval, 2), ha='center', va='bottom')

# Show the plot
plt.tight_layout()
plt.show()

#corrolation between students exposed tobacco and intitation of Tobacco
columns_of_interest =['Students who saw anyone smoking inside the  school building or outside school property (%)',
                      'Median age of initiation of Cigarette (in years)',
                      'Median age of initiation of Bidi (in years)',
                      'Median age of initiation of smokeless tobacco (in years)']

analysis_of_data = df[columns_of_interest]

corralation_matrix = analysis_of_data.corr()

plt.figure(figsize=(12, 10))
sns.heatmap(corralation_matrix, annot=True, cmap='coolwarm', fmt ='.2f')
plt.title('Correlation between Students exposed tobacco and Median age of Initation')
plt.show()

#Refusal of selling tobacco products

plt.figure(figsize=(14, 8))

data_for_analysis = {
    'State/UT': ['State1', 'State2', 'State3', 'State4'],
    'Region': ['North', 'South', 'East', 'West'],
    'Refused sale of cigarette because of age in past 30 days (%)': [10, 20, 30, 40],
    'Refused sale of bidi because of age in past 30 days (%)': [5, 15, 25, 35],
    'Refused sale of smokeless tobacco because of age in past 30 days (%)': [2, 12, 22, 32]
}

# Create DataFrame
df = pd.DataFrame(data_for_analysis)

# Melt the DataFrame for easier plotting with seaborn
df_melted = df.melt(id_vars=['Region', 'State/UT'], var_name='Product', value_name='Percentage')

# Set the plot size
plt.figure(figsize=(14, 8))

# Create the grouped bar chart
sns.barplot(x='Region', y='Percentage', hue='Product', data=df_melted)

# Add labels and title
plt.xlabel('Region')
plt.ylabel('Percentage of Refusals')
plt.title('Refusal of Sale of Tobacco Products Because of Age in Past 30 Days by Region')
plt.legend(title='Product')

# Show the plot
plt.tight_layout()
plt.show()

#Tobacco products bought as whole or indivilldually

plt.figure(figsize=(14, 8))

data_for_analysis = {
    'Product': ['Bought Cigarette as individual sticks in past 30 days', 'Bought Bidi as individual sticks in past 30 days'],
    'Percentage': [50, 70]
}

# Create DataFrame
df = pd.DataFrame(data_for_analysis)

# Calculate the total percentage
total_percentage = df['Percentage'].sum()

# Set the plot size
plt.figure(figsize=(10, 6))

# Create the bar chart
sns.barplot(x='Product', y='Percentage', data=df, palette='viridis')

# Add labels and title
plt.xlabel('Product')
plt.ylabel('Percentage')
plt.title('Percentage of Tobacco Products Bought as Individual Sticks in Past 30 Days')

# Show the plot
plt.tight_layout()
plt.show()

#Corralation between anti tobbaco laws and students not smoking


data_ananlysis = {
    'Category': [
        'Students who noticed anti-tobacco messages anywhere in past 30 days (%)',
        'Students who noticed anti-tobacco messages in mass media in past 30 days (%)',
        'Students who noticed anti-tobacco messages at events in past 30 days (%)',
        'Students who noticed health warnings on any tobacco product in past 30 days (%)',
        'Students who saw tobacco advertisements anywhere in past 30 days (%)',
        'Students who saw anyone using tobacco on mass media in past 30 days (%)',
        'Students who noticed cigarette advertisements at point of sale in past 30 days (%)',
        'Students who were taught about harmful effects of tobacco use in past 12 months (%)',
        'Students who thought it is difficult to quit smoking tobacco (%)',
        'Students who thought other people’s tobacco smoking is harmful to them (%)',
        'Students who favoured ban on smoking inside enclosed public places (%)',
        'Students who favoured ban on smoking at outdoor public places (%)',
        'School heads aware of COTPA, 2003 (%)',
        'Schools authorized to collect fine for COTPA violations (%)',
        'Schools followed ‘tobacco-free school’ guidelines (%)',
        'Schools aware of the policy for displaying ‘tobacco-free school’ board (%)'
    ],
    'Percentage': [70, 65, 60, 80, 50, 45, 55, 75, 85, 90, 95, 92, 60, 55, 70, 65]
}

# Create DataFrame
df = pd.DataFrame(data_ananlysis)

# Set the plot size
plt.figure(figsize=(14, 8))

# Create the bar chart
sns.barplot(y='Category', x='Percentage', data=df, palette='viridis')

# Add labels and title
plt.xlabel('Percentage')
plt.ylabel('Category')
plt.title('Awareness and Notice of Anti-Tobacco Messages and Policies among Students and Schools')

# Show the plot
plt.tight_layout()
plt.show()

#The corralation between the laws of anti tobbaco and initiation of using tobacco


data = {
    'Students who noticed anti-tobacco messages anywhere in past 30 days (%)': np.random.rand(108) * 100,
    'Students who noticed anti-tobacco messages in mass media in past 30 days (%)': np.random.rand(108) * 100,
    'Students who noticed anti-tobacco messages at events in past 30 days (%)': np.random.rand(108) * 100,
    'Students who noticed health warnings on any tobacco product in past 30 days (%)': np.random.rand(108) * 100,
    'Students who saw tobacco advertisements anywhere in past 30 days (%)': np.random.rand(108) * 100,
    'Students who saw anyone using tobacco on mass media in past 30 days (%)': np.random.rand(108) * 100,
    'Students who noticed cigarette advertisements at point of sale in past 30 days (%)': np.random.rand(108) * 100,
    'Students who were taught about harmful effects of tobacco use in past 12 months (%)': np.random.rand(108) * 100,
    'Students who thought it is difficult to quit smoking tobacco (%)': np.random.rand(108) * 100,
    'Students who thought other people’s tobacco smoking is harmful to them (%)': np.random.rand(108) * 100,
    'Students who favoured ban on smoking inside enclosed public places (%)': np.random.rand(108) * 100,
    'Students who favoured ban on smoking at outdoor public places (%)': np.random.rand(108) * 100,
    'School heads aware of COTPA, 2003 (%)': np.random.rand(108) * 100,
    'Schools authorized to collect fine for COTPA violations (%)': np.random.rand(108) * 100,
    'Schools followed ‘tobacco-free school’ guidelines (%)': np.random.rand(108) * 100,
    'Schools aware of the policy for displaying ‘tobacco-free school’ board (%)': np.random.rand(108) * 100,
    'Never cigarette smokers susceptible to cigarette use in future (%)': np.random.rand(108) * 100,
    'Median age of initiation of Cigarette (in years)': np.random.rand(108) * 10 + 10,
    'Median age of initiation of Bidi (in years)': np.random.rand(108) * 10 + 10,
    'Median age of initiation of smokeless tobacco (in years)': np.random.rand(108) * 10 + 10
}

# Create DataFrame
df = pd.DataFrame(data)

# Calculate the correlation matrix
correlation_matrix = df.corr()

# Set the plot size
plt.figure(figsize=(16, 12))

# Create the heatmap
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidths=0.5)

# Add labels and title
plt.title('Correlation Matrix of Anti-Tobacco Awareness and Smoking Initiation Metrics')

# Show the plot
plt.tight_layout()
plt.show()

